% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/counterfactual_typical.R
\name{typical}
\alias{typical}
\title{Generate a "typical" data grid for use in \code{marginaleffects}'s \code{newdata} argument}
\usage{
typical(
  ...,
  model = NULL,
  newdata = NULL,
  FUN.character = mean_or_mode,
  FUN.factor = mean_or_mode.factor,
  FUN.numeric = mean_or_mode,
  FUN.other = mean_or_mode
)
}
\arguments{
\item{...}{named arguments with vectors of values for the typical variables
to construct (see Examples below.) The typical data will include
combinations of unique values from these vectors}

\item{model}{Model object}

\item{newdata}{data.frame (one and only one of the \code{model} and \code{newdata} arguments}

\item{FUN_character}{the function to be applied to character variables.}

\item{FUN_factor}{the function to be applied to factor variables.}

\item{FUN_numeric}{the function to be applied to numeric variables.}

\item{FUN_other}{the function to be applied to other variable types.
must be true).}
}
\value{
A \code{data.frame} in which each row corresponds to one combination of the named
predictors supplied by the user via the \code{...} dots. Variables which are not
explicitly defined are held at their mean or mode.
}
\description{
Generate a "typical" data grid for use in \code{marginaleffects}'s \code{newdata} argument
}
\details{
If \code{typical} is used in a \code{marginaleffects} or \code{predictions} call as the
\code{newdata} argument, users do not need to specify the \code{model} or \code{newdata}
argument. The data is extracted automatically from the model.

If users supply a model, the data used to fit that model is retrieved using
the \code{insight::get_data} function.
}
\examples{
# The output only has 2 rows, and all the variables except `hp` are at their
# mean or mode.
typical(newdata = mtcars, hp = c(100, 110))

# We get the same result by feeding a model instead of a data.frame
mod <- lm(mpg ~ hp, mtcars)
typical(model = mod, hp = c(100, 110))

# Use in `marginaleffects` to compute "Typical Marginal Effects"
marginaleffects(mod, newdata = typical(hp = c(100, 110)))
}
